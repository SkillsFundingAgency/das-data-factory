{
	"name": "ImportFAAToDataMart",
	"properties": {
		"activities": [
			{
				"name": "ImportFAAUsers",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SetRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@variables('RunId')",
									"type": "Expression"
								}
							}
						],
						"batchSize": 100
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE FROM Stg.FAA_Users\n\n  INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportFAAUsersToDM'\n\t   ,getdate()\n\t   ,0",
							"type": "Expression"
						},
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']['$binary']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['_id']['$type']"
								},
								"sink": {
									"name": "TypeCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['EntityId']['$binary']"
								},
								"sink": {
									"name": "EntityId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['EntityId']['$type']"
								},
								"sink": {
									"name": "EntityTypeCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['DateCreated']['$date']"
								},
								"sink": {
									"name": "DateCreatedTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['DateUpdated']['$date']"
								},
								"sink": {
									"name": "DateUpdatedTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Status']"
								},
								"sink": {
									"name": "Status",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Roles']"
								},
								"sink": {
									"name": "Roles",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ActivationDate']['$date']"
								},
								"sink": {
									"name": "ActivationTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['LastLogin']['$date']"
								},
								"sink": {
									"name": "LastLogInTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['LastActivity']['$date']"
								},
								"sink": {
									"name": "LastActivityTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['RunId']"
								},
								"sink": {
									"name": "RunId",
									"type": "Int64"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcFAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "users"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "FAA_Users",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "SetRunId",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunId",
					"value": {
						"value": "@pipeline().parameters.RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "LogFAAUserImportErrorDetails",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportFAAUsers",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportFAAUsers').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportFAAUsersToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogSuccessfulExecution",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ImportFAAUsers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportFAAUsersToDM'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Stg",
							"SchemaName": "Users"
						}
					}
				}
			},
			{
				"name": "ImportFAACandidateDob",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportFAAUsers",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@variables('RunId')",
									"type": "Expression"
								}
							}
						],
						"batchSize": 100
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE FROM Stg.FAA_CandidateDob\n\n  INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportFAACandidateDobToDM'\n\t   ,getdate()\n\t   ,0",
							"type": "Expression"
						},
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']['$binary']"
								},
								"sink": {
									"name": "CandidateId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['LegacyCandidateId']"
								},
								"sink": {
									"name": "LegacyCandidateId",
									"type": "Int64"
								}
							},
							{
								"source": {
									"path": "$['RegistrationDetails']['DateOfBirth']['$date']"
								},
								"sink": {
									"name": "DateOfBirth",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['RunId']"
								},
								"sink": {
									"name": "RunID",
									"type": "Int64"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcFAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "candidates"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "FAA_CandidateDob",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "LogFAACandidateDobImportErrorDetails",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportFAACandidateDob",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportFAACandidateDob').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportFAACandidateDobToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ImportFAACandidatePostCode",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportFAACandidateDob",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@variables('RunId')",
									"type": "Expression"
								}
							}
						],
						"batchSize": 100
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE FROM Stg.FAA_CandidatePostCode\n\n  INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportFAACandidatePostcodeToDM'\n\t   ,getdate()\n\t   ,0",
							"type": "Expression"
						},
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']['$binary']"
								},
								"sink": {
									"name": "CandidateId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['LegacyCandidateId']"
								},
								"sink": {
									"name": "LegacyCandidateId",
									"type": "Int64"
								}
							},
							{
								"source": {
									"path": "$['RegistrationDetails']['Address']['Postcode']"
								},
								"sink": {
									"name": "PostCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['RunId']"
								},
								"sink": {
									"name": "RunID",
									"type": "Int64"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcFAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "candidates"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "FAA_CandidatePostcode",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "LogFAAImportErrorDetails",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportFAACandidatePostCode",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportFAACandidatePostCode').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportFAACandidatePostCodeToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogSuccessfulExecutionOfFAACandidateDob",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ImportFAACandidateDob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportFAACandidateDobToDM'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Stg",
							"SchemaName": "Vacancies"
						}
					}
				}
			},
			{
				"name": "LogSuccessfulExecutionOfCandidatePostcode",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ImportFAACandidatePostCode",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportFAACandidatePostcodeToDM'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Stg",
							"SchemaName": "Vacancies"
						}
					}
				}
			},
			{
				"name": "ImportFAASavedSearches",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportFAACandidatePostCode",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100,
						"filter": "{\"_id\":\"CandidateSkills\"}"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE FROM Stg.RAA_ReferenceDataCandidateSkills\n\n  INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportRAAReferenceDataToDM'\n\t   ,getdate()\n\t   ,0",
							"type": "Expression"
						},
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']"
								},
								"sink": {
									"name": "CandidateSkillsId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedDate']"
								},
								"sink": {
									"name": "CandidateSkillsLastUpdatedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['skills']"
								},
								"sink": {
									"name": "Skills",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcFAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "Candidate"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_ReferenceDataCandidateSkills",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "ImportRAAReferenceDataApprenticeshipProgrammes",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportFAASavedSearches",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100,
						"filter": "{\"_id\":\"ApprenticeshipProgrammes\"}\n"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "DELETE FROM Stg.RAA_ReferenceDataApprenticeshipProgrammes\n",
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['_id']"
								},
								"sink": {
									"name": "ProgrammeId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['apprenticeshipType']"
								},
								"sink": {
									"name": "ApprenticeshipType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['title']"
								},
								"sink": {
									"name": "Title",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['effectiveFrom']['$date']"
								},
								"sink": {
									"name": "EffectiveFrom",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['duration']"
								},
								"sink": {
									"name": "Duration",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['isActive']"
								},
								"sink": {
									"name": "IsActive",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['educationLevelNumber']"
								},
								"sink": {
									"name": "EducationLevelNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['_id']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedDate']['$date']"
								},
								"sink": {
									"name": "LastUpdatedDateTimeStamp",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['data']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "referenceData"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_ReferenceDataApprenticeshipProgrammes",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "ImportRAAReferenceDataQualificationTypes",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataApprenticeshipProgrammes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100,
						"filter": "{\"_id\":\"QualificationTypes\"}"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "DELETE FROM Stg.RAA_ReferenceDataQualificationTypes",
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedDate']"
								},
								"sink": {
									"name": "LastUpdatedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['qualificationTypes']"
								},
								"sink": {
									"name": "QualificationTypes",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "referenceData"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_ReferenceDataQualificationTypes",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "ImportRAAReferenceDataProfanities",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataQualificationTypes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100,
						"filter": "{\"_id\":\"Profanities\"}"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "DELETE FROM Stg.RAA_ReferenceDataProfanities\n",
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedDate']"
								},
								"sink": {
									"name": "LastUpdatedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['profanities']"
								},
								"sink": {
									"name": "Profanities",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "referenceData"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_ReferenceDataProfanities",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "ImportRAAReferenceDataBannedPhrases",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataProfanities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100,
						"filter": "{\"_id\":\"BannedPhrases\"}"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "DELETE FROM Stg.RAA_ReferenceDataBannedPhrases",
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedDate']"
								},
								"sink": {
									"name": "LastUpdatedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['bannedPhrases']"
								},
								"sink": {
									"name": "BannedPhrases",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "referenceData"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_ReferenceDataBannedPhrases",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "LogRDErrorMessage",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportFAASavedSearches",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportRAAReferenceDataCandidateSkills').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAReferenceDataToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogRDAPErrorMessage",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataApprenticeshipProgrammes",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportRAAReferenceDataApprenticeshipProgrammes').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAReferenceDataToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogRDQTErrorMessage",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataQualificationTypes",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportRAAReferenceDataQualificationTypes').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAReferenceDataToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ImportRAAReferenceDataBankHolidays",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataBannedPhrases",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100,
						"filter": "{\"_id\":\"BankHolidays\"}"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "DELETE FROM Stg.RAA_ReferenceDataBankHolidays\n",
						"maxConcurrentConnections": {
							"value": "@pipeline().parameters.MaxConcurrentConnections",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().parameters.DIU",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedDate']['$date']"
								},
								"sink": {
									"name": "LastUpdatedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['data']['england-and-wales']['events']"
								},
								"sink": {
									"name": "EnglandAndWalesEvents",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['data']['scotland']['events']"
								},
								"sink": {
									"name": "ScotlandEvents",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['data']['northern-ireland']['events']"
								},
								"sink": {
									"name": "NortherIrelandEvents",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "referenceData"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_ReferenceDataBankHolidays",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "LogRDProfanitiesErrorMessage",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataProfanities",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportRAAReferenceDataProfanities').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAReferenceDataToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogRDBannedPhrasesErrorMessage",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataBannedPhrases",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportRAAReferenceDataBannedPhrases').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAReferenceDataToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogRDBankHolidaysErrorMessage",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataBankHolidays",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@{activity('ImportRAAReferenceDataBankHolidays').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAReferenceDataToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogSuccessfulExecutionOfReferenceData",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ImportRAAReferenceDataBankHolidays",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportRAAReferenceDataToDM'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Stg",
							"SchemaName": "Vacancies"
						}
					}
				}
			}
		],
		"parameters": {
			"MaxConcurrentConnections": {
				"type": "int",
				"defaultValue": 4
			},
			"DIU": {
				"type": "int",
				"defaultValue": 4
			},
			"RunId": {
				"type": "string",
				"defaultValue": "150"
			}
		},
		"variables": {
			"RunId": {
				"type": "String",
				"defaultValue": "\"1\""
			}
		},
		"annotations": []
	}
}