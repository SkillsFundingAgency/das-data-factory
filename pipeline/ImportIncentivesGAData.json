{
	"name": "ImportIncentivesGAData",
	"properties": {
		"description": "Import Incentives GA Data ",
		"activities": [
			{
				"name": "GenerateRunId",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[GenerateRunId]"
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "GetRunId",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GenerateRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT CAST(MAX(RunId) AS VARCHAR(256)) as RunId FROM Mgmt.Log_RunId",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Stg",
							"SchemaName": "Users"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "CopyGAData",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SetProjectContainer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "GoogleCloudStorageReadSettings",
							"maxConcurrentConnections": 2,
							"recursive": true,
							"wildcardFolderPath": "gadata",
							"wildcardFileName": "*.parquet"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "fullVisitorId",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "fullVisitorId",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "visitNumber",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "visitNumber",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "visitId",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "visitId",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "visitStartDateTime",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "visitStartDateTime",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "visitDate",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "visitDate",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "visitorId",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "visitorId",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "userId",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "userId",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "clientId",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "clientId",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "hits_page_pagePath",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "hits_page_pagePath",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "hits_time",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "hits_time",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "employerID",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "employerID",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "ID2",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "ID2",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "ID3",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "ID3",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "EFSAToken",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "EFSAToken",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "hits_page_pagePathLevel1",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "hits_page_pagePathLevel1",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "hits_page_pagePathLevel2",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "hits_page_pagePathLevel2",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "hits_page_pagePathLevel3",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "hits_page_pagePathLevel3",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "hits_page_pagePathLevel4",
									"type": "String",
									"physicalType": "UTF8"
								},
								"sink": {
									"name": "hits_page_pagePathLevel4",
									"type": "String",
									"physicalType": "nvarchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SrcIncentivesGAImport",
						"type": "DatasetReference",
						"parameters": {
							"ContainerName": {
								"value": "@variables('ProjectContainer')",
								"type": "Expression"
							},
							"FileName": "@variables('FileName')"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "gasessiondata",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "GetProjectContainer",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT CASE WHEN '@{pipeline().DataFactory}'='das-at-dfac-df'\n                      THEN 'das-at-databucket'\n                      WHEN '@{pipeline().DataFactory}'='das-test-dfac-df'\n                      THEN 'das-at-databucket'\n                      WHEN '@{pipeline().DataFactory}'='das-pp-dfac-df'\n                      THEN 'das-at-databucket'\n                     WHEN '@{pipeline().DataFactory}'='das-prd-dfac-df'\n                      THEN 'das-prd-databucket'\n                      ELSE 'Unknown'\n           END ProjectContainer\n                ",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "SetProjectContainer",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetProjectContainer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ProjectContainer",
					"value": {
						"value": "@activity('GetProjectContainer').output.firstRow.ProjectContainer",
						"type": "Expression"
					}
				}
			},
			{
				"name": "LogSuccessfulActivityCopyGAData",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "CopyGAData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoActivityTypeIdsToDMStaging'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "LogErrorActivityGADataCopyError",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "CopyGAData",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[InsertLogErrorDetails]",
						"storedProcedureParameters": {
							"ErrorMessage": {
								"type": "String",
								"value": {
									"value": "@{activity('CopyGAData').Error.message}",
									"type": "Expression"
								}
							},
							"RunId": {
								"type": "Int32",
								"value": {
									"value": "@variables('RunId')",
									"type": "Expression"
								}
							},
							"TaskType": {
								"type": "String",
								"value": "ImportMarketoActivityTypeIdsToDMStaging"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			}
		],
		"variables": {
			"ProjectContainer": {
				"type": "String",
				"defaultValue": "das-at-databucket"
			},
			"RunId": {
				"type": "String"
			},
			"FileName": {
				"type": "String",
				"defaultValue": "output-00000-of-00001.parquet"
			}
		},
		"annotations": []
	}
}