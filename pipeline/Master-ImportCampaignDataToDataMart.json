{
	"name": "Master-ImportCampaignDataToDataMart",
	"properties": {
		"activities": [
			{
				"name": "GetRunId",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GenerateRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT CAST(MAX(RunId) AS VARCHAR(256)) as RunId FROM Mgmt.Log_RunId",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Stg",
							"SchemaName": "Users"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "GenerateRunId",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[GenerateRunId]"
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ExecuteImportCampaignDataToDataMart_1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "GetDateFilterValuesForPrograms",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ImportCampaignDataToDataMart_1",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"RunId": {
							"value": "@activity('GetRunId').output.firstRow.RunId",
							"type": "Expression"
						},
						"StartDateFilter": {
							"value": "@{activity('GetDateFilterValuesForPrograms').output.firstRow.StartDateFilter}",
							"type": "Expression"
						},
						"EndDateFilter": {
							"value": "@{activity('GetDateFilterValuesForPrograms').output.firstRow.EndDateFilter}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LogStartOfCampaignImport",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{activity('GetRunId').output.firstRow.RunId}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportMarketoCampaignDataToDM'\n\t   ,getdate()\n\t   ,0\n\nSELECT 'N/A'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "LogCompleteCampaignImport",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "UpdateImportStatusInConfig",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "/* Log the Import of Campaign Data as Complete */\n\nDECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoCampaignDataToDM'\n     AND RunId=@{activity('GetRunId').output.firstRow.RunId}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{activity('GetRunId').output.firstRow.RunId}\n\n/*  Log The Status as Finish in Execution Results */\nUPDATE MGMT\n     SET FullJobStatus='Finish'\n\tfrom Mgmt.Log_Execution_Results Mgmt\n   WHERE LogId=(SELECT MAX(LogId)\n                  FROM Mgmt.Log_Execution_Results\n\t\t\t\t WHERE RunId=@{activity('GetRunId').output.firstRow.RunId})\n/* Log the End Time on Run Id */\n  UPDATE MGMT\n      SET EndDateTime=getdate()\n\t FROM Mgmt.Log_RunId Mgmt\n\tWHERE RunId=@{activity('GetRunId').output.firstRow.RunId}\n\nSELECT 'na'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "ExecuteImportMarketoBulkExtractTablesToPL",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ExecuteImportCampaignDataToDataMart_2_History",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.02:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[ImportMarketoBulkExtractTablesToPL]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@activity('GetRunId').output.firstRow.RunId",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "GetDateFilterValuesForLeads",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ExecuteImportMarketoReferenceTablesToPL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "IF EXISTS (SELECT * FROM Mtd.MarketoFilterConfig WHERE ISNULL(ImportStatus,0)=0)\n  BEGIN\n  SELECT MFC_ID,StartDateFilter,EndDateFilter,'History' as FilterType\n  FROM Mtd.MarketoFilterConfig\n  WHERE MFC_Id IN (\n  SELECT min(mfc_id)\n    FROM Mtd.MarketoFilterConfig\n   WHERE Isnull(ImportStatus,0)=0)\n   END\n   ELSE \n   BEGIN\n   select -1 as MFC_ID\n         ,convert(varchar,cast(getdate()-1 as date))+'T00:00:00Z' as StartDateFilter\n\t\t ,convert(varchar,cast(getdate() as date))+'T00:00:00Z' as EndDateFilter\n\t\t ,'Latest' as FilterType\n   END",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "GetProgramFilterValues",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetDateFilterValuesForActivities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "IF EXISTS (SELECT * FROM ASData_PL.MarketoPrograms WHERE ISNULL(LeadProgramImportStatus,0)=0)\n  BEGIN\n SELECT ProgramId,ProgramName\n FROM AsData_PL.MarketoPrograms\nWHERE ProgramId in \n  (SELECT max(ProgramId) as ProgramId\n    FROM ASData_PL.MarketoPrograms\n   WHERE ISNULL(LeadProgramImportStatus,0)=0)\n   END\n   ELSE \n   BEGIN\n   UPDATE AsData_PL.MarketoPrograms\n         SET LeadProgramImportStatus=0\n\n  SELECT ProgramId,ProgramName\n FROM AsData_PL.MarketoPrograms\nWHERE ProgramId in \n  (SELECT max(ProgramId) as ProgramId\n    FROM ASData_PL.MarketoPrograms\n   WHERE ISNULL(LeadProgramImportStatus,0)=0)\n    END",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "ExecuteImportMarketoReferenceTablesToPL",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ExecuteImportCampaignDataToDataMart_1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[ImportMarketoReferenceTablesToPL]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@activity('GetRunId').output.firstRow.RunId",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamgmt_staging_dbconnectionstring",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "UpdateImportStatusInConfig",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ExecuteImportMarketoBulkExtractTablesToPL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "/* Update Config Status */\nIF ('@{activity('GetDateFilterValuesForLeads').output.firstRow.FilterType}'='History')\nBEGIN\n\tUPDATE Mtd.MarketoFilterConfig\n\t   SET ImportStatus=1\n\t      ,ImportDate=GETDATE()\n\t WHERE MFC_Id=@{activity('GetDateFilterValuesForLeads').output.firstRow.MFC_ID}\nEND \n\n/* Update Config Status For Activities */\nIF ('@{activity('GetDateFilterValuesForActivities').output.firstRow.FilterType}'='History')\nBEGIN\n\tUPDATE Mtd.MarketoFilterConfig\n\t   SET ActivityImportStatus=1\n\t      ,ActivityImportDate=GETDATE()\n\t WHERE MFC_Id=@{activity('GetDateFilterValuesForActivities').output.firstRow.MFC_ID}\nEND \n\n/* Update Program Status */\n\nIF ('@{activity('GetDateFilterValuesForActivities').output.firstRow.FilterType}'='History')\nBEGIN\n\tUPDATE Mtd.MarketoFilterConfigForPrograms\n\t   SET ImportStatus=1\n\t      ,ImportDate=GETDATE()\n\t WHERE MFCP_Id=@{activity('GetDateFilterValuesForPrograms').output.firstRow.MFCP_ID}\nEND \n\n/* Update Program Members Export Status */\n\nUPDATE ASData_PL.MarketoPrograms\n\t   SET LeadProgramImportStatus=1\n\t      ,LeadProgramImportDate=GETDATE()\n\t WHERE ProgramId=@{activity('GetProgramFilterValues').output.firstRow.ProgramId}\n\nSELECT 1\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "ExecuteImportCampaignDataToDataMart_2_History",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "GetProgramFilterValues",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ImportCampaignDataToDataMart_2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"RunId": {
							"value": "@activity('GetRunId').output.firstRow.RunId",
							"type": "Expression"
						},
						"FilterStartDate": {
							"value": "@activity('GetDateFilterValuesForLeads').output.firstRow.StartDateFilter",
							"type": "Expression"
						},
						"FilterEndDate": {
							"value": "@activity('GetDateFilterValuesForLeads').output.firstRow.EndDateFilter",
							"type": "Expression"
						},
						"ProgramId": {
							"value": "@activity('GetProgramFilterValues').output.firstRow.ProgramId",
							"type": "Expression"
						},
						"FilterParameter": "createdAt",
						"ActivityFilterStartDate": {
							"value": "@activity('GetDateFilterValuesForActivities').output.firstRow.StartDateFilter",
							"type": "Expression"
						},
						"ActivityFilterEndDate": {
							"value": "@activity('GetDateFilterValuesForActivities').output.firstRow.EndDateFilter",
							"type": "Expression"
						},
						"ProgramName": {
							"value": "@activity('GetProgramFilterValues').output.firstRow.ProgramName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "GetDateFilterValuesForActivities",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetDateFilterValuesForLeads",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "IF EXISTS (SELECT * FROM Mtd.MarketoFilterConfig WHERE ISNULL(ImportStatus,0)=0)\n  BEGIN\n  SELECT MFC_ID,StartDateFilter,EndDateFilter,'History' as FilterType\n  FROM Mtd.MarketoFilterConfig\n  WHERE MFC_Id IN (\n  SELECT min(mfc_id)\n    FROM Mtd.MarketoFilterConfig\n   WHERE Isnull(ActivityImportStatus,0)=0)\n   END\n   ELSE \n   BEGIN\n   select -1 as MFC_ID\n         ,convert(varchar,cast(getdate()-1 as date))+'T00:00:00Z' as StartDateFilter\n\t\t ,convert(varchar,cast(getdate() as date))+'T00:00:00Z' as EndDateFilter\n\t\t ,'Latest' as FilterType\n   END",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			},
			{
				"name": "GetDateFilterValuesForPrograms",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LogStartOfCampaignImport",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "IF EXISTS (SELECT * FROM Mtd.MarketoFilterConfigForPrograms WHERE ISNULL(ImportStatus,0)=0)\n  BEGIN\n  SELECT MFCP_ID,StartDateFilter,EndDateFilter,'History' as FilterType\n  FROM Mtd.MarketoFilterConfigForPrograms\n  WHERE MFCP_Id IN (\n  SELECT min(mfcp_id)\n    FROM Mtd.MarketoFilterConfigForPrograms\n   WHERE Isnull(ImportStatus,0)=0)\n   END\n   ELSE \n   BEGIN\n   select -1 as MFCP_ID\n         ,convert(varchar,cast(getdate()-1 as date))+'T00:00:00Z' as StartDateFilter\n\t\t ,convert(varchar,cast(getdate() as date))+'T00:00:00Z' as EndDateFilter\n\t\t ,'Latest' as FilterType\n   END",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Users",
							"SchemaName": "Stg"
						}
					}
				}
			}
		],
		"annotations": []
	}
}