{
	"name": "ImportRAAToDataMart",
	"properties": {
		"activities": [
			{
				"name": "GetRunId",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GenerateRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT CAST(MAX(RunId) AS VARCHAR(256)) as RunId FROM Mgmt.Log_RunId",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "ImportRAAUsers",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SetRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"additionalColumns": [
							{
								"name": "RunId",
								"value": {
									"value": "@variables('RunId')",
									"type": "Expression"
								}
							}
						],
						"batchSize": 100
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE FROM Stg.RAA_Users\n\n  INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportRAAUsersToDM'\n\t   ,getdate()\n\t   ,0",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']['$binary']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['_id']['$type']"
								},
								"sink": {
									"name": "TypeCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['idamUserId']"
								},
								"sink": {
									"name": "IdamUserId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['userType']"
								},
								"sink": {
									"name": "UserType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['name']"
								},
								"sink": {
									"name": "UserName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['email']"
								},
								"sink": {
									"name": "UserEmail",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['createdDate']['$date']"
								},
								"sink": {
									"name": "UserCreatedTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastSignedInDate']['$date']"
								},
								"sink": {
									"name": "LastSignedInTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['RunId']"
								},
								"sink": {
									"name": "RunId",
									"type": "Int64"
								}
							},
							{
								"source": {
									"path": "$['ukprn']"
								},
								"sink": {
									"name": "Ukprn",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "users"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_Users",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "SetRunId",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetRunId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunId",
					"value": {
						"value": "@activity('GetRunId').output.firstRow.RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GenerateRunId",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[GenerateRunId]"
				},
				"linkedServiceName": {
					"referenceName": "datamartSqlSecret",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ImportRAAUsersStgToLive",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LogSuccessfulExecution",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[ImportRAAUsersStgToLive]",
					"storedProcedureParameters": {
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamartSqlSecret",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogRAAUserImportErrorDetails",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAUsers",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "activity('ImportRAAUsers').output.errors",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAUsersToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamartSqlSecret",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogSuccessfulExecution",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ImportRAAUsers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportRAAUsersToDM'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "Stg",
							"SchemaName": "Users"
						}
					}
				}
			},
			{
				"name": "ImportRAAVacancies",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportRAAUsers",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE FROM Stg.RAA_Vacancies\n\n  INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportRAAVacanciesToDM'\n\t   ,getdate()\n\t   ,0",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['_id']['$binary']"
								},
								"sink": {
									"name": "BinaryId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['_id']['$type']"
								},
								"sink": {
									"name": "TypeCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['vacancyReference']"
								},
								"sink": {
									"name": "VacancyReference",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['status']"
								},
								"sink": {
									"name": "VacancyStatus",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ownerType']"
								},
								"sink": {
									"name": "OwnerType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['sourceOrigin']"
								},
								"sink": {
									"name": "SourceOrigin",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['sourceType']"
								},
								"sink": {
									"name": "SourceType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['closedDate']['$date']"
								},
								"sink": {
									"name": "ClosedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['createdDate']['$date']"
								},
								"sink": {
									"name": "CreatedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['createdByUser']['userId']"
								},
								"sink": {
									"name": "CreatedByUserID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['createdByUser']['name']"
								},
								"sink": {
									"name": "CreatedByUserName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['createdByUser']['email']"
								},
								"sink": {
									"name": "CreatedByUserEmail",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['submittedDate']['$date']"
								},
								"sink": {
									"name": "SubmittedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['submittedByUser']['userId']"
								},
								"sink": {
									"name": "SubmittedByUserId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['submittedByUser']['name']"
								},
								"sink": {
									"name": "SubmittedByUserName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['submittedByUser']['email']"
								},
								"sink": {
									"name": "SubmittedByUserEmail",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['approvedDate']['$date']"
								},
								"sink": {
									"name": "ApprovedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['liveDate']['$date']"
								},
								"sink": {
									"name": "LiveDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedDate']['$date']"
								},
								"sink": {
									"name": "LastUpdatedTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedByUser']['userId']"
								},
								"sink": {
									"name": "LastUpdatedByUserId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedByUser']['name']"
								},
								"sink": {
									"name": "LastUpdatedByUserName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastUpdatedByUser']['email']"
								},
								"sink": {
									"name": "LastUpdatedByUserEmail",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['isDeleted']"
								},
								"sink": {
									"name": "IsDeleted",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['applicationMethod']"
								},
								"sink": {
									"name": "ApplicationMethod",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['applicationUrl']"
								},
								"sink": {
									"name": "ApplicationUrl",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['closingDate']['$date']"
								},
								"sink": {
									"name": "ClosingDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['description']"
								},
								"sink": {
									"name": "VacancyDescription",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['disabilityConfident']"
								},
								"sink": {
									"name": "DisabilityConfident",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerDescription']"
								},
								"sink": {
									"name": "EmployerDescription"
								}
							},
							{
								"source": {
									"path": "$['employerLocation']['addressLine1']"
								},
								"sink": {
									"name": "EmployerAddressLine1",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerLocation']['postcode']"
								},
								"sink": {
									"name": "EmployerPostCode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerLocation']['latitude']"
								},
								"sink": {
									"name": "EmployerLatitude",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerLocation']['longitude']"
								},
								"sink": {
									"name": "EmployerLongitude",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerLocation']['addressLine2']"
								},
								"sink": {
									"name": "EmployerAddressLine2",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerLocation']['addressLine3']"
								},
								"sink": {
									"name": "EmployerAddressLine3",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerName']"
								},
								"sink": {
									"name": "EmployerName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerNameOption']"
								},
								"sink": {
									"name": "EmployerNameOption",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['legalEntityName']"
								},
								"sink": {
									"name": "LegalEntityName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['geoCodeMethod']"
								},
								"sink": {
									"name": "GeoCodeMethod",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['legalEntityId']"
								},
								"sink": {
									"name": "LegalEntityId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['numberOfPositions']"
								},
								"sink": {
									"name": "NumberOfPositions",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['outcomeDescription']"
								},
								"sink": {
									"name": "OutcomeDescription",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['programmeId']"
								},
								"sink": {
									"name": "ProgrammeId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['qualifications'][0]['qualificationType']"
								},
								"sink": {
									"name": "QualificationType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['qualifications'][0]['subject']"
								},
								"sink": {
									"name": "QualificationSubject",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['qualifications'][0]['grade']"
								},
								"sink": {
									"name": "QualificationGrade",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['qualifications'][0]['weighting']"
								},
								"sink": {
									"name": "QualificationWeighting",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['shortDescription']"
								},
								"sink": {
									"name": "ShortDescription",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['skills']"
								},
								"sink": {
									"name": "Skills",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['startDate']['$date']"
								},
								"sink": {
									"name": "StartDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['title']"
								},
								"sink": {
									"name": "VacancyTitle",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['trainingDescription']"
								},
								"sink": {
									"name": "TrainingDescription",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['trainingProvider']['ukprn']"
								},
								"sink": {
									"name": "TrainingProviderUkprn",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['trainingProvider']['name']"
								},
								"sink": {
									"name": "TrainingProviderName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['trainingProvider']['address']['addressLine3']"
								},
								"sink": {
									"name": "TrainingProviderAddressLine3",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['trainingProvider']['address']['addressLine4']"
								},
								"sink": {
									"name": "TrainingProviderAddressLine4",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['trainingProvider']['address']['postcode']"
								},
								"sink": {
									"name": "TrainingProviderPostcode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['wage']['duration']"
								},
								"sink": {
									"name": "WageDuration",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['wage']['durationUnit']"
								},
								"sink": {
									"name": "WageDurationUnit",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['wage']['workingWeekDescription']"
								},
								"sink": {
									"name": "WorkingWeekDescription",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['wage']['weeklyHours']"
								},
								"sink": {
									"name": "WeeklyHours",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['wage']['wageType']"
								},
								"sink": {
									"name": "WageType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['wage']['fixedWageYearlyAmount']"
								},
								"sink": {
									"name": "FixedWageYearlyAmount",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['closureReason']"
								},
								"sink": {
									"name": "ClosureReason",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerContact']['Name']"
								},
								"sink": {
									"name": "EmployerContactName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerContact']['Email']"
								},
								"sink": {
									"name": "EmployerContactEmail",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerContact']['Phone']"
								},
								"sink": {
									"name": "EmployerContactPhone",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['applicationInstructions']"
								},
								"sink": {
									"name": "ApplicationIstructions",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerLocation']['addressLine4']"
								},
								"sink": {
									"name": "EmployerAddressLine4",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['employerWebsiteUrl']"
								},
								"sink": {
									"name": "EmployerWebsiteUrl",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['accountLegalEntityPublicHashedId']"
								},
								"sink": {
									"name": "AccountLegalEntityPublicHashedId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['thingsToConsider']"
								},
								"sink": {
									"name": "ThingsToConsider",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['wage']['wageAdditionalInformation']"
								},
								"sink": {
									"name": "WageAdditionalInformation",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['deletedDate']['$date']"
								},
								"sink": {
									"name": "DeletedDateTimeStamp",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['deletedByUser']['userId']"
								},
								"sink": {
									"name": "DeletedByUserId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['deletedByUser']['name']"
								},
								"sink": {
									"name": "DeletedByUserName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['deletedByUser']['email']"
								},
								"sink": {
									"name": "DeletedByUserEmail",
									"type": "String"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "vacancies"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_Vacancies",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "LogRAAv2VacancyImportErrorDetails",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAVacancies",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@activity('ImportRAAVacancies').output.errors",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAVacanciesToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamartSqlSecret",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ImportRAAapplicationReviews",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ImportRAAVacancies",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "CosmosDbMongoDbApiSource",
						"batchSize": 100
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "DELETE FROM Stg.RAA_ApplicationReviews\n\n  INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportRAAapplicationReviewToDM'\n\t   ,getdate()\n\t   ,0",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SrcRAACosmos",
						"type": "DatasetReference",
						"parameters": {
							"CollectionName": "applicationReviews"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DestDataMart",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "RAA_ApplicationReviews",
							"SchemaName": "Stg"
						}
					}
				]
			},
			{
				"name": "LogRAAaplicationReviewImportErrorDetails",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ImportRAAapplicationReviews",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertLogErrorDetails]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "activity('ImportRAAapplicationReviews').output.errors",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"TaskType": {
							"value": "ImportRAAApplicationReviewToDM",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "datamartSqlSecret",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"RunId": {
				"type": "String",
				"defaultValue": "\"1\""
			}
		},
		"annotations": []
	}
}