{
	"name": "ProcessTPRFiles",
	"properties": {
		"activities": [
			{
				"name": "GetLatestFileNamesInTPR",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SrcTprBlobStorage",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@adddays(utcnow(),-1)",
							"type": "Expression"
						},
						"modifiedDatetimeEnd": {
							"value": "@utcnow()",
							"type": "Expression"
						}
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetLatestFileNamesInTPR",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetLatestFileNamesInTPR').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(startswith(item().name,'apprenticeship'),endswith(item().name,'.txt'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "IgnoreRun",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": "SELECT '1'",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DestTPR",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "log_execution_results",
													"SchemaName": "mgmt"
												}
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "GetSrcFileDetailsToDb",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "SetRunId",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.00:30:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "INSERT INTO Mgmt.SourceFileList\n(FileName)\nselect '@{item().name}'\n\n/* Get Source File ID */\n\nDeclare @SourceFileId int\n\nSELECT @SourceFileID=Max(SourceFileId) From Mgmt.SourceFileList WHERE FileName='@{item().name}' \n\n\n\n/* Update SourceFileList with the  RunId that's processing the File */\n UPDATE SFL\n    SET SFL.RunId=@{variables('RunId')}\n   FROM Mgmt.SourceFileList SFL\n  WHERE SFL.SourceFileID=@SourceFileId\n\nSELECT @SourceFileId\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DestTPR",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "log_execution_results",
													"SchemaName": "mgmt"
												}
											}
										}
									},
									{
										"name": "GetRunId",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "GenerateRunId",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.00:30:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": true,
											"secureInput": true
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": "SELECT CAST(MAX(Run_Id) AS VARCHAR(256)) as RunId FROM Mgmt.Log_RunId",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DestTPR",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "LOG_EXECUTION_RESULTS",
													"SchemaName": "MGMT"
												}
											},
											"firstRowOnly": true
										}
									},
									{
										"name": "GenerateRunId",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "0.00:30:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": true,
											"secureInput": true
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[GenerateRunId]"
										},
										"linkedServiceName": {
											"referenceName": "tpr_dbconnectionstring",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "SetRunId",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "GetRunId",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "RunId",
											"value": {
												"value": "@activity('GetRunId').output.firstRow.RunId",
												"type": "Expression"
											}
										}
									},
									{
										"name": "LogStartOfImport",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "GetSrcFileDetailsToDb",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.00:10:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": true,
											"secureInput": true
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-2'\n\t   ,'ImportDataFromFile'\n\t   ,getdate()\n\t   ,0\n\nSELECT 'N/A'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DestTPR",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "Log_Execution_Results",
													"SchemaName": "Mgmt"
												}
											}
										}
									},
									{
										"name": "CopyFileToDb",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "LogStartOfImport",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.03:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"additionalColumns": [
													{
														"name": "FileName",
														"value": {
															"value": "@{item().name}",
															"type": "Expression"
														}
													},
													{
														"name": "RunId",
														"value": {
															"value": "@variables('RunId')",
															"type": "Expression"
														}
													}
												],
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"wildcardFileName": {
														"value": "@{item().name}",
														"type": "Expression"
													}
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"preCopyScript": "/* Truncate Staging Table */\n\n  TRUNCATE TABLE Tpr.StagingData\n\n  /* Drop Existing Index before the load */\n\n   DROP INDEX IF EXISTS NCI_Staging_TPR ON Tpr.StagingData",
												"disableMetricsCollection": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"name": "?Record Type",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "RecordType1",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Unique ID_Replace",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "TPRUniqueID",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "District Number_Replace",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "DistrictNumber",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Reference_Replace",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "Reference",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "AO District",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AODistrict",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "AO Tax Type",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AOTaxType",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "AO Check Char",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AOCheckChar",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "AO Reference",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AOReference",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Start Date",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "StartDate",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "End Date",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EndDate",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "End Date Code",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EndDateCode",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Restart Date",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "RestartDate",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Review Yr",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "ReviewYr",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Company Reg No",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "CompanyRegNo",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Trade Class",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "TradeClass",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "AO Ind",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AOInd",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Xfer Type",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "XferType",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Unique Ref District",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "UniqueRefDistrict",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Unique Reference",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "UniqueReference",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Record Type",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "RecordType2",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Name 1",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "Name1",
															"type": "String",
															"physicalType": "nvarchar"
														}
													},
													{
														"source": {
															"name": "Name 2",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "Name2",
															"type": "String",
															"physicalType": "nvarchar"
														}
													},
													{
														"source": {
															"name": "Telephone Nmbr",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "TelephoneNumber",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Email Address",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EmailAddress",
															"type": "String",
															"physicalType": "nvarchar"
														}
													},
													{
														"source": {
															"name": "Address Type",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AddressType",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "ADI",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "ADI",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Address Line 1",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AddressLine1",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Address Line 2",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AddressLine2",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Address Line 3",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AddressLine3",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Address Line 4",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AddressLine4",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Address Line 5",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AddressLine5",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Post Code",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "PostCode",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Foreign Country",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "ForeignCountry",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Address Verified Indicator",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "AddressVerifiedIndicator",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Record Type_1",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "RecordType3",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Signal Unique ID",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "SignalUniqueID",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Code_4",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "SignalCode",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Signal Chgd",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "SignalChanged",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Start Year",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "SignalStartYear",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "End Year",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "SignalEndYear",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Value",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "SignalValue",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Record Type_5",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "RecordType7",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "EmployerSchemeHistory Unique ID",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EmployerSchemeHistoryUniqueID",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Start Year_8",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EmployerSchemeHistStartYear",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "End Year_9",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EmployerSchemeHistEndYear",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Scheme Type",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "SchemeType",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Record Type_10",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "RecordType12",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Employer Count ID",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EmployerCountID",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Code_13",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "EEC_Code",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Date Taken",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "DateTaken",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "Number Counted",
															"type": "String",
															"physicalType": "String"
														},
														"sink": {
															"name": "NumberCounted",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "FileName",
															"type": "String"
														},
														"sink": {
															"name": "SourceFileName",
															"type": "String",
															"physicalType": "varchar"
														}
													},
													{
														"source": {
															"name": "RunId",
															"type": "String"
														},
														"sink": {
															"name": "RunID",
															"type": "Int32",
															"physicalType": "int"
														}
													}
												],
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "SrcTprBlobStorage",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DestTPR",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "StagingData",
													"SchemaName": "Tpr"
												}
											}
										]
									},
									{
										"name": "UpdateLogAndRecreateIndex",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "CopyFileToDb",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.03:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "/* Get LogId */\n\nDeclare @LogID Int\nDeclare @SourceFileId Int\n\nSELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results \n   WHERE StoredProcedureName='ImportDataFromFile'\n     AND RunId= @{variables('RunId')}\n\n\n/* Update Counts in RecordCounts */\n\n   INSERT INTO Mgmt.Log_Record_Counts\n   (LogId,RunId,SourceTableName,TargetTableName,SourceRecordCount,TargetRecordCount)\n   SELECT  @LogID\n         , @{variables('RunId')}\n\t\t ,'@{item().name}'\n\t     ,'StagingData'\n\t\t ,(SELECT COUNT(*) FROM Tpr.StagingData WHERE SourceFileName='@{item().name}')\n\t\t ,(SELECT COUNT(*) FROM Tpr.StagingData WHERE SourceFileName='@{item().name}')\n\n  /* Update Flag in SourceFileList as Loaded */\n\n  UPDATE SFL\n     SET SFL.LoadedToStaging=1\n\t    ,SFL.StagingLoadDate=getdate()\n\t--\t,SFL.RunId='@{variables('RunId')}'\n    FROM Mgmt.SourceFileList SFL\n   WHERE SFL.SourceFileId=@{activity('GetSrcFileDetailsToDb').output.firstRow.SourceFileId}\n\t\t\t \t\t\t \n\n/* Recreate the Index */\n\n  CREATE NONCLUSTERED INDEX NCI_Staging_TPR\n      ON Tpr.StagingData(TPRUniqueID)\n\n\n\n/* Update Log Execution Results as Success if the query ran succesfully*/\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending- Go To Step3 RunValidationChecks'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DestTPR",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "Log_Execution_Results",
													"SchemaName": "Mgmt"
												}
											}
										}
									},
									{
										"name": "DeleteProcessedFile",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "ExecuteETLProcs",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "SrcTprBlobStorage",
												"type": "DatasetReference"
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "ExecuteETLProcs",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "UpdateLogAndRecreateIndex",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": "DECLARE @RunId int\nDECLARE @RetentionDate datetime\n\nSELECT @RetentionDate=DATEADD(MONTH, -1, GETDATE()) \n\n/* Run Validation Checks if Import File is Successful */\n\nIF EXISTS (SELECT * FROM Mgmt.Log_Execution_Results where StoredProcedureName='ImportDataFromFile' and Execution_Status=1 and RunId=@RunId)\nBEGIN \nEXEC dbo.RunValidationChecks @{variables('RunId')}\nEND\nELSE RAISERROR( 'Import Data From File Failed -Check Log Table For Errors',1,1)\n\n\n\n/* Import Valid Records to Target Clone Tables */\n\nIF EXISTS (SELECT * FROM Mgmt.Log_Execution_Results where StoredProcedureName='RunValidationChecks' and Execution_Status=1 and RunId=@RunId) \nBEGIN\nEXEC dbo.LoadTargetCloneTables @{variables('RunId')}\nEND\nELSE RAISERROR( 'Validation Checks Failed-Check Log Table For Errors',1,1)\n\n\n/* Swap Clone Tables With Live */\n\nIF EXISTS (SELECT * FROM Mgmt.Log_Execution_Results where StoredProcedureName='LoadTargetCloneTables' and Execution_Status=1 and RunId=@RunId) \nBEGIN\nEXEC dbo.LoadTargetTables @{variables('RunId')}\nEND\nELSE RAISERROR( 'Loading Clone Tables Failed-Check Log Table For Errors',1,1)\n\n\n\n--/* Update History Table with Processed File */\n\nIF EXISTS (SELECT * FROM Mgmt.Log_Execution_Results where StoredProcedureName='LoadTargetTables' and Execution_Status=1 and RunId=@RunId)\nBEGIN\nEXEC dbo.UpdateHistoryTable @{variables('RunId')},@RetentionDate\nEND\nELSE RAISERROR( 'Loading Target Tables Failed-Check Log Table For Errors',1,1)\n\n\n\n\n--/* Raise Error if Updating History Table Failed */\n\nIF EXISTS (SELECT * FROM Mgmt.Log_Execution_Results where StoredProcedureName='UpdateHistoryTable' and Execution_Status<>1 and RunId=@{variables('RunId')})\nBEGIN\nRAISERROR( 'Updating History Table Failed-Check Log Table For Errors',1,1)\nEND\n\n\nIF EXISTS (SELECT * FROM Mgmt.Log_Execution_Results where StoredProcedureName='UpdateHistoryTable' and Execution_Status=1 and RunId=@{variables('RunId')})\nBEGIN\nUPDATE Mgmt.Log_RunId SET EndDateTime=getdate() Where Run_Id=@{variables('RunId')}\nEND\n\nSELECT '1'",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "DestTPR",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "Log_Execution_Results",
													"SchemaName": "Mgmt"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"FileName": {
				"type": "Array"
			},
			"RunId": {
				"type": "String"
			}
		},
		"annotations": []
	}
}