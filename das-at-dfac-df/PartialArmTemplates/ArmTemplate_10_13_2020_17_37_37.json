{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "das-at-dfac-df"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ImportCampaignDataToDataMart_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetActivityTypeIds",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetAccessTokenForActivityIds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'MarketoActivityTypes' AND TABLE_SCHEMA=N'Stg') DROP TABLE [Stg].[MarketoActivityTypes]\n\n/* Start Logging */\nINSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'  ,'ImportMarketoActivityTypeIdsToDMStaging'\n\t   ,getdate()\n\t   ,0\n",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "description"
										}
									}
								],
								"collectionReference": "$['result']"
							}
						},
						"inputs": [
							{
								"referenceName": "SrcRestMarketo",
								"type": "DatasetReference",
								"parameters": {
									"RelativePath": {
										"value": "/rest/v1/activities/types.json?access_token=@{activity('GetAccessTokenForActivityIds').output.access_token}",
										"type": "Expression"
									},
									"MarketoBaseUrl": {
										"value": "@variables('BaseUrl')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MarketoActivityTypes",
									"SchemaName": "Stg"
								}
							}
						]
					},
					{
						"name": "GetAccessTokenForActivityIds",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetKey",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/identity/oauth/token?grant_type=client_credentials&client_id=@{variables('Name')}&client_secret=@{variables('Key')}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET"
						}
					},
					{
						"name": "GetAccessTokenForProgramTypesNames",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetKey",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/identity/oauth/token?grant_type=client_credentials&client_id=@{variables('Name')}&client_secret=@{variables('Key')}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET"
						}
					},
					{
						"name": "GetProgramNames",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetAccessTokenForProgramTypesNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'MarketoPrograms' AND TABLE_SCHEMA=N'Stg') DROP TABLE [Stg].[MarketoPrograms]\n\n\n/* Start Logging */\nINSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'  ,'ImportMarketoProgramsToDMStaging'\n\t   ,getdate()\n\t   ,0",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "description"
										}
									},
									{
										"source": {
											"path": "[['createdAt']"
										},
										"sink": {
											"name": "createdAt"
										}
									},
									{
										"source": {
											"path": "[['updatedAt']"
										},
										"sink": {
											"name": "updatedAt"
										}
									},
									{
										"source": {
											"path": "[['url']"
										},
										"sink": {
											"name": "url"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "[['channel']"
										},
										"sink": {
											"name": "channel"
										}
									}
								],
								"collectionReference": "$['result']"
							}
						},
						"inputs": [
							{
								"referenceName": "SrcRestMarketo",
								"type": "DatasetReference",
								"parameters": {
									"RelativePath": {
										"value": "/rest/asset/v1/programs.json?access_token=@{activity('GetAccessTokenForProgramTypesNames').output.access_token}&earliestUpdatedAt=@{pipeline().parameters.StartDateFilter}&latestUpdatedAt=@{pipeline().parameters.EndDateFilter}&maxReturn=200",
										"type": "Expression"
									},
									"MarketoBaseUrl": {
										"value": "@variables('BaseUrl')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MarketoPrograms",
									"SchemaName": "Stg"
								}
							}
						]
					},
					{
						"name": "GetVaultUrl",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CASE WHEN '@{pipeline().DataFactory}'='das-at-dfac-df'\n                      THEN 'das-at-dfac-kv.vault.azure.net'\n                      WHEN '@{pipeline().DataFactory}'='das-test-dfac-df'\n                      THEN 'das-test-dfac-kv.vault.azure.net'\n                      WHEN '@{pipeline().DataFactory}'='das-pp-dfac-df'\n                      THEN 'das-pp-dfac-kv.vault.azure.net'\n                     WHEN '@{pipeline().DataFactory}'='das-prd-dfac-df'\n                      THEN 'das-prd-dfac-kv.vault.azure.net'\n                      ELSE 'Unknown'\n           END VaultUrl\n                ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "SetVaultUrl",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetVaultUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "VaultUrl",
							"value": {
								"value": "@activity('GetVaultUrl').output.firstRow.VaultUrl",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetBaseUrl",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetVaultUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{variables('VaultUrl')}/secrets/marketo-baseurl?api-version=7.0",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SetBaseUrl",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetBaseUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "BaseUrl",
							"value": {
								"value": "@activity('GetBaseUrl').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetUserName",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetBaseUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{variables('VaultUrl')}/secrets/marketo-clientid?api-version=7.0",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SetUserName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetUserName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Name",
							"value": {
								"value": "@activity('GetUserName').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetKey",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetUserName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{variables('VaultUrl')}/secrets/marketo-clientsecret?api-version=7.0",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SetKey",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetKey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Key",
							"value": {
								"value": "@activity('GetKey').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRunId",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunId",
							"value": {
								"value": "@pipeline().parameters.RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LogSuccessfulActivityTypeCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetActivityTypeIds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoActivityTypeIdsToDMStaging'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogSuccessfulProgramNamesCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetProgramNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoProgramsToDMStaging'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogProgramNamesCopyError",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetProgramNames",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[InsertLogErrorDetails]",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"type": "String",
										"value": {
											"value": "@{activity('GetProgramNames').Error.message}\n",
											"type": "Expression"
										}
									},
									"RunId": {
										"type": "Int32",
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										}
									},
									"TaskType": {
										"type": "String",
										"value": "ImportMarketoProgramsToDMStaging"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogErrorActivityTypeIdsCopyError",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetActivityTypeIds",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[InsertLogErrorDetails]",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"type": "String",
										"value": {
											"value": "@{activity('GetActivityTypeIds').Error.message}",
											"type": "Expression"
										}
									},
									"RunId": {
										"type": "Int32",
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										}
									},
									"TaskType": {
										"type": "String",
										"value": "ImportMarketoActivityTypeIdsToDMStaging"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string"
					},
					"StartDateFilter": {
						"type": "string"
					},
					"EndDateFilter": {
						"type": "string"
					}
				},
				"variables": {
					"VaultUrl": {
						"type": "String"
					},
					"BaseUrl": {
						"type": "String"
					},
					"Name": {
						"type": "String"
					},
					"Key": {
						"type": "String"
					},
					"RunId": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportCampaignDataToDataMart_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAccessToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyLeadPrograms",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/identity/oauth/token?grant_type=client_credentials&client_id=@{variables('Name')}&client_secret=@{variables('Key')}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET"
						}
					},
					{
						"name": "CreateLeadsExtractJob",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetAccessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/bulk/v1/leads/export/create.json?access_token=@{activity('GetAccessToken').output.access_token}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "'bearer '+@{activity('GetAccessToken').output.access_token}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\"fields\":[\"firstName\",\"lastName\",\"id\",\"email\",\"createdAt\",\"updatedAt\"],\"format\":\"TSV\",\"columnHeaderNames\":{\"firstName\":\"FirstName\",\"lastName\":\"LastName\",\"id\":\"LeadId\",\"email\":\"EmailAddress\",\"createdAt\":\"CreatedAt\",\"updatedAt\":\"UpdatedAt\"},\"filter\":{\"@{pipeline().parameters.FilterParameter}\":{\"startAt\":\"@{pipeline().parameters.FilterStartDate}\",\"endAt\":\"@{pipeline().parameters.FilterEndDate}\"}}}}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "StartExportJob",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CreateLeadsExtractJob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/bulk/v1/leads/export/@{activity('CreateLeadsExtractJob').output.result[0].exportId}/enqueue.json?access_token=@{activity('GetAccessToken').output.access_token}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"body": "v1"
						}
					},
					{
						"name": "Wait5MinForJobToComplete",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "StartExportJob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "CopyLeads",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait5MinForJobToComplete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'MarketoLeads' AND TABLE_SCHEMA=N'Stg') DROP TABLE [Stg].[MarketoLeads]\n\n/*Start Logging */\n\nINSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'  ,'ImportMarketoLeadsToDMStaging'\n\t   ,getdate()\n\t   ,0\n\n",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SrcHttpMarketo",
								"type": "DatasetReference",
								"parameters": {
									"RelativePath": {
										"value": "/bulk/v1/leads/export/@{activity('CreateLeadsExtractJob').output.result[0].exportId}/file.json?access_token=@{activity('GetAccessToken').output.access_token}",
										"type": "Expression"
									},
									"MarketoBaseUrl": {
										"value": "@variables('BaseUrl')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MarketoLeads",
									"SchemaName": "Stg"
								}
							}
						]
					},
					{
						"name": "GetAccessTokenForActivities",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyLeads",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/identity/oauth/token?grant_type=client_credentials&client_id=@{variables('Name')}&client_secret=@{variables('Key')}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET"
						}
					},
					{
						"name": "CreateActivitiesExtractJob",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetAccessTokenForActivities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/bulk/v1/activities/export/create.json?access_token=@{activity('GetAccessTokenForActivities').output.access_token}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "'bearer '+@{activity('GetAccessTokenForActivities').output.access_token}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\"fields\":[\"marketoGUID\",\"leadId\",\"activityDate\",\"activityTypeId\",\"campaignId\",\"primaryAttributeValueId\",\"primaryAttributeValue\",\"attributes\"],\"format\":\"TSV\",\"columnHeaderNames\":{\"marketoGUID\":\"MarketoGUID\",\"leadId\":\"LeadId\",\"activityDate\":\"ActivityDate\",\"activityTypeId\":\"ActivityTypeId\",\"campaignId\":\"CampaignId\",\"primaryAttributeValueId\":\"PrimaryAttributeValueId\",\"primaryAttributeValue\":\"primaryAttributeValue\",\"attributes\":\"Attributes\"},\"filter\":{\"@{pipeline().parameters.FilterParameter}\":{\"startAt\":\"@{pipeline().parameters.ActivityFilterStartDate}\",\"endAt\":\"@{pipeline().parameters.ActivityFilterEndDate}\"}}}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "StartExportJobForActivities",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CreateActivitiesExtractJob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/bulk/v1/activities/export/@{activity('CreateActivitiesExtractJob').output.result[0].exportId}/enqueue.json?access_token=@{activity('GetAccessTokenForActivities').output.access_token}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"body": "v1"
						}
					},
					{
						"name": "Wait5MinForActivitiesJobToComplete",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "StartExportJobForActivities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "CopyActivities",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait5MinForActivitiesJobToComplete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'MarketoLeadActivities' AND TABLE_SCHEMA=N'Stg') DROP TABLE [Stg].[MarketoLeadActivities]\n\n\n/* Start Logging */\nINSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'  ,'ImportMarketoLeadActivitiesToDMStaging'\n\t   ,getdate()\n\t   ,0\n\n\n",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SrcHttpMarketo",
								"type": "DatasetReference",
								"parameters": {
									"RelativePath": {
										"value": "/bulk/v1/activities/export/@{activity('CreateActivitiesExtractJob').output.result[0].exportId}/file.json?access_token=@{activity('GetAccessTokenForActivities').output.access_token}",
										"type": "Expression"
									},
									"MarketoBaseUrl": {
										"value": "@variables('BaseUrl')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MarketoLeadActivities",
									"SchemaName": "Stg"
								}
							}
						]
					},
					{
						"name": "CreateProgramsExtractJob",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetCampaigns",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/bulk/v1/program/members/export/create.json?access_token=@{activity('GetAccessTokenForPrograms').output.access_token}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "'bearer '+@{activity('GetAccessTokenForPrograms').output.access_token}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\"format\":\"TSV\",\"fields\":[\"Id\",\"firstName\",\"lastName\",\"email\",\"Member Date\",\"Program\",\"Program Id\",\"Status\",\"Status Id\",\"Lead Id\",\"Program Type Id\",\"Success\",\"createdAt\",\"updatedAt\"],\"columnHeaderNames\":{\"Id\":\"Id\",\"firstName\":\"FirstName\",\"email\":\"Email\",\"Member Date\":\"MemberDate\",\"Program\":\"Program\",\"Program Id\":\"ProgramId\",\"Status\":\"Status\",\"Status Id\":\"StatusId\",\"Lead Id\":\"LeadId\",\"Program Type Id\":\"ProgramTypeId\",\"Success\":\"Success\",\"createdAt\":\"CreatedAt\",\"updatedAt\":\"UpdatedAt\"},\"filter\":{\"programId\":@{pipeline().parameters.ProgramId}}}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "StartExportJobForPrograms",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CreateProgramsExtractJob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/bulk/v1/program/members/export/@{activity('CreateProgramsExtractJob').output.result[0].exportId}/enqueue.json?access_token=@{activity('GetAccessTokenForPrograms').output.access_token}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"body": "v1"
						}
					},
					{
						"name": "Wait5MinForActivitiesJobToComplete_copy1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "StartExportJobForPrograms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "CopyLeadPrograms",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait5MinForActivitiesJobToComplete_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'MarketoLeadPrograms' AND TABLE_SCHEMA=N'Stg') DROP TABLE [Stg].[MarketoLeadPrograms]\n\n/* Start Logging */\n\n\n/* Start Logging */\nINSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'  ,'ImportMarketoLeadProgramsToDMStaging'\n\t   ,getdate()\n\t   ,0\n",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SrcHttpMarketo",
								"type": "DatasetReference",
								"parameters": {
									"RelativePath": {
										"value": "/bulk/v1/program/members/export/@{activity('CreateProgramsExtractJob').output.result[0].exportId}/file.json?access_token=@{activity('GetAccessTokenForPrograms').output.access_token}",
										"type": "Expression"
									},
									"MarketoBaseUrl": {
										"value": "@variables('BaseUrl')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MarketoLeadPrograms",
									"SchemaName": "Stg"
								}
							}
						]
					},
					{
						"name": "GetVaultUrl",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT CASE WHEN '@{pipeline().DataFactory}'='das-at-dfac-df'\n                      THEN 'das-at-dfac-kv.vault.azure.net'\n                      WHEN '@{pipeline().DataFactory}'='das-test-dfac-df'\n                      THEN 'das-test-dfac-kv.vault.azure.net'\n                      WHEN '@{pipeline().DataFactory}'='das-pp-dfac-df'\n                      THEN 'das-pp-dfac-kv.vault.azure.net'\n                     WHEN '@{pipeline().DataFactory}'='das-prd-dfac-df'\n                      THEN 'das-prd-dfac-kv.vault.azure.net'\n                      ELSE 'Unknown'\n           END VaultUrl\n                ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "SetVaultUrl",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetVaultUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "VaultUrl",
							"value": {
								"value": "@activity('GetVaultUrl').output.firstRow.VaultUrl",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetBaseUrl",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetVaultUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{variables('VaultUrl')}/secrets/marketo-baseurl?api-version=7.0",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SetBaseUrl",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetBaseUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "BaseUrl",
							"value": {
								"value": "@activity('GetBaseUrl').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetUserName",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetBaseUrl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{variables('VaultUrl')}/secrets/marketo-clientid?api-version=7.0",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SetUserName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetUserName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Name",
							"value": {
								"value": "@activity('GetUserName').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetKey",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetUserName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{variables('VaultUrl')}/secrets/marketo-clientsecret?api-version=7.0",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SetKey",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetKey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Key",
							"value": {
								"value": "@activity('GetKey').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRunId",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunId",
							"value": {
								"value": "@pipeline().parameters.RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LogSuccessfulLeadProgramsCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeadPrograms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoLeadProgramsToDMStaging'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogSuccessfulLeadsCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoLeadsToDMStaging'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogSuccessfulActivitiesCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyActivities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoLeadActivitiesToDMStaging'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogErrorCopyLeadPrograms",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeadPrograms",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[InsertLogErrorDetails]",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"type": "String",
										"value": {
											"value": "@{activity('CopyLeadPrograms').Error.message}",
											"type": "Expression"
										}
									},
									"RunId": {
										"type": "Int32",
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										}
									},
									"TaskType": {
										"type": "String",
										"value": "ImportMarketoLeadProgramsToDMStaging"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogErrorCopyLeads",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeads",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[InsertLogErrorDetails]",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"type": "String",
										"value": {
											"value": "@{activity('CopyLeads').Error.message}",
											"type": "Expression"
										}
									},
									"RunId": {
										"type": "Int32",
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										}
									},
									"TaskType": {
										"type": "String",
										"value": {
											"value": "ImportMarketoLeadsToDMStaging",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogErrorCopyActivities",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyActivities",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[InsertLogErrorDetails]",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"type": "String",
										"value": {
											"value": "@{activity('CopyActivities').Error.message}",
											"type": "Expression"
										}
									},
									"RunId": {
										"type": "Int32",
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										}
									},
									"TaskType": {
										"type": "String",
										"value": "ImportMarketoLeadActivitiesToDMStaging"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "GetAccessTokenForPrograms",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetKey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{variables('BaseUrl')}/identity/oauth/token?grant_type=client_credentials&client_id=@{variables('Name')}&client_secret=@{variables('Key')}",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AzureIntegrationRunTime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET"
						}
					},
					{
						"name": "GetCampaigns",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetAccessTokenForPrograms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'MarketoCampaigns' AND TABLE_SCHEMA=N'Stg') DROP TABLE [Stg].[MarketoCampaigns]\n\n\n/* Start Logging */\nINSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'  ,'ImportMarketoCampaignsToDMStaging'\n\t   ,getdate()\n\t   ,0",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['requestId']"
										},
										"sink": {
											"name": "requestId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "[['programName']"
										},
										"sink": {
											"name": "programName"
										}
									},
									{
										"source": {
											"path": "[['programId']"
										},
										"sink": {
											"name": "programId"
										}
									},
									{
										"source": {
											"path": "[['workspaceName']"
										},
										"sink": {
											"name": "workspaceName"
										}
									},
									{
										"source": {
											"path": "[['createdAt']"
										},
										"sink": {
											"name": "createdAt"
										}
									},
									{
										"source": {
											"path": "[['updatedAt']"
										},
										"sink": {
											"name": "updatedAt"
										}
									},
									{
										"source": {
											"path": "[['active']"
										},
										"sink": {
											"name": "active"
										}
									}
								],
								"collectionReference": "$['result']"
							}
						},
						"inputs": [
							{
								"referenceName": "SrcRestMarketo",
								"type": "DatasetReference",
								"parameters": {
									"RelativePath": {
										"value": "/rest/v1/campaigns.json?access_token=@{activity('GetAccessTokenForPrograms').output.access_token}&programName=@{pipeline().parameters.ProgramName}&maxReturn=200",
										"type": "Expression"
									},
									"MarketoBaseUrl": {
										"value": "@variables('BaseUrl')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MarketoCampaigns",
									"SchemaName": "Stg"
								}
							}
						]
					},
					{
						"name": "LogSuccessfulCampaignCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetCampaigns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoCampaignsToDMStaging'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogCampaignsCopyError",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetCampaigns",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[InsertLogErrorDetails]",
								"storedProcedureParameters": {
									"ErrorMessage": {
										"type": "String",
										"value": {
											"value": "@{activity('GetCampaigns').Error.message}\n",
											"type": "Expression"
										}
									},
									"RunId": {
										"type": "Int32",
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										}
									},
									"TaskType": {
										"type": "String",
										"value": "ImportCampaignsToDMStaging"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string"
					},
					"FilterStartDate": {
						"type": "string"
					},
					"FilterEndDate": {
						"type": "string"
					},
					"ProgramId": {
						"type": "string"
					},
					"FilterParameter": {
						"type": "string"
					},
					"ActivityFilterStartDate": {
						"type": "string"
					},
					"ActivityFilterEndDate": {
						"type": "string"
					},
					"ProgramName": {
						"type": "string"
					}
				},
				"variables": {
					"VaultUrl": {
						"type": "String"
					},
					"BaseUrl": {
						"type": "String"
					},
					"Name": {
						"type": "String"
					},
					"Key": {
						"type": "String"
					},
					"RunId": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master-ImportCampaignDataToDataMart')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetRunId",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GenerateRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT CAST(MAX(RunId) AS VARCHAR(256)) as RunId FROM Mgmt.Log_RunId",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Stg",
									"SchemaName": "Users"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "GenerateRunId",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[GenerateRunId]"
						},
						"linkedServiceName": {
							"referenceName": "datamgmt_staging_dbconnectionstring",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ExecuteImportCampaignDataToDataMart_1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetDateFilterValuesForPrograms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportCampaignDataToDataMart_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@activity('GetRunId').output.firstRow.RunId",
									"type": "Expression"
								},
								"StartDateFilter": {
									"value": "@{activity('GetDateFilterValuesForPrograms').output.firstRow.StartDateFilter}",
									"type": "Expression"
								},
								"EndDateFilter": {
									"value": "@{activity('GetDateFilterValuesForPrograms').output.firstRow.EndDateFilter}",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "LogStartOfCampaignImport",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n        @{activity('GetRunId').output.firstRow.RunId}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'ImportMarketoCampaignDataToDM'\n\t   ,getdate()\n\t   ,0\n\nSELECT 'N/A'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "LogCompleteCampaignImport",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "UpdateImportStatusInConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "/* Log the Import of Campaign Data as Complete */\n\nDECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='ImportMarketoCampaignDataToDM'\n     AND RunId=@{activity('GetRunId').output.firstRow.RunId}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{activity('GetRunId').output.firstRow.RunId}\n\n/*  Log The Status as Finish in Execution Results */\nUPDATE MGMT\n     SET FullJobStatus='Finish'\n\tfrom Mgmt.Log_Execution_Results Mgmt\n   WHERE LogId=(SELECT MAX(LogId)\n                  FROM Mgmt.Log_Execution_Results\n\t\t\t\t WHERE RunId=@{activity('GetRunId').output.firstRow.RunId})\n/* Log the End Time on Run Id */\n  UPDATE MGMT\n      SET EndDateTime=getdate()\n\t FROM Mgmt.Log_RunId Mgmt\n\tWHERE RunId=@{activity('GetRunId').output.firstRow.RunId}\n\nSELECT 'na'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "ExecuteImportMarketoBulkExtractTablesToPL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExecuteImportCampaignDataToDataMart_2_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMarketoBulkExtractTablesToPL]",
							"storedProcedureParameters": {
								"RunId": {
									"value": {
										"value": "@activity('GetRunId').output.firstRow.RunId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datamgmt_staging_dbconnectionstring",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetDateFilterValuesForLeads",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ExecuteImportMarketoReferenceTablesToPL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "IF EXISTS (SELECT * FROM Mtd.MarketoFilterConfig WHERE ISNULL(ImportStatus,0)=0)\n  BEGIN\n  SELECT MFC_ID,StartDateFilter,EndDateFilter,'History' as FilterType\n  FROM Mtd.MarketoFilterConfig\n  WHERE MFC_Id IN (\n  SELECT min(mfc_id)\n    FROM Mtd.MarketoFilterConfig\n   WHERE Isnull(ImportStatus,0)=0)\n   END\n   ELSE \n   BEGIN\n   select -1 as MFC_ID\n         ,convert(varchar,cast(getdate()-1 as date))+'T00:00:00Z' as StartDateFilter\n\t\t ,convert(varchar,cast(getdate() as date))+'T00:00:00Z' as EndDateFilter\n\t\t ,'Latest' as FilterType\n   END",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "GetProgramFilterValues",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetDateFilterValuesForActivities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "IF EXISTS (SELECT * FROM ASData_PL.MarketoPrograms WHERE ISNULL(LeadProgramImportStatus,0)=0)\n  BEGIN\n  IF ((SELECT isnull(LeadProgramImportStatus,0) from AsData_PL.MarketoPrograms WHERE ProgramId=1187) =0) -- Get Redundancy First\n  BEGIN\n  SELECT ProgramId,ProgramName\n    FROM ASData_PL.MarketoPrograms\n   WHERE ProgramId=1187\n  END\n  ELSE BEGIN\n SELECT ProgramId,ProgramName\n FROM AsData_PL.MarketoPrograms\nWHERE ProgramId in \n  (SELECT max(ProgramId) as ProgramId\n    FROM ASData_PL.MarketoPrograms\n   WHERE ISNULL(LeadProgramImportStatus,0)=0)\n   END\n   END\n   ELSE \n   BEGIN\n   UPDATE AsData_PL.MarketoPrograms\n         SET LeadProgramImportStatus=0\n\n  SELECT ProgramId,ProgramName\n    FROM AsData_PL.MarketoPrograms\nWHERE ProgramId in \n  (SELECT max(ProgramId) as ProgramId\n    FROM ASData_PL.MarketoPrograms\n   WHERE ISNULL(LeadProgramImportStatus,0)=0)\n    END\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "ExecuteImportMarketoReferenceTablesToPL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExecuteImportCampaignDataToDataMart_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMarketoReferenceTablesToPL]",
							"storedProcedureParameters": {
								"RunId": {
									"value": {
										"value": "@activity('GetRunId').output.firstRow.RunId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "datamgmt_staging_dbconnectionstring",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateImportStatusInConfig",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ExecuteImportMarketoBulkExtractTablesToPL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "/* Update Config Status */\nIF ('@{activity('GetDateFilterValuesForLeads').output.firstRow.FilterType}'='History')\nBEGIN\n\tUPDATE Mtd.MarketoFilterConfig\n\t   SET ImportStatus=1\n\t      ,ImportDate=GETDATE()\n\t WHERE MFC_Id=@{activity('GetDateFilterValuesForLeads').output.firstRow.MFC_ID}\nEND \n\n/* Update Config Status For Activities */\nIF ('@{activity('GetDateFilterValuesForActivities').output.firstRow.FilterType}'='History')\nBEGIN\n\tUPDATE Mtd.MarketoFilterConfig\n\t   SET ActivityImportStatus=1\n\t      ,ActivityImportDate=GETDATE()\n\t WHERE MFC_Id=@{activity('GetDateFilterValuesForActivities').output.firstRow.MFC_ID}\nEND \n\n/* Update Program Status */\n\nIF ('@{activity('GetDateFilterValuesForPrograms').output.firstRow.FilterType}'='History')\nBEGIN\n\tUPDATE Mtd.MarketoFilterConfigForPrograms\n\t   SET ImportStatus=1\n\t      ,ImportDate=GETDATE()\n\t WHERE MFCP_Id=@{activity('GetDateFilterValuesForPrograms').output.firstRow.MFCP_ID}\nEND \n\n/* Update Program Members Export Status */\n\nUPDATE ASData_PL.MarketoPrograms\n\t   SET LeadProgramImportStatus=1\n\t      ,LeadProgramImportDate=GETDATE()\n\t WHERE ProgramId=@{activity('GetProgramFilterValues').output.firstRow.ProgramId}\n\nSELECT 1\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "ExecuteImportCampaignDataToDataMart_2_History",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetProgramFilterValues",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ImportCampaignDataToDataMart_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@activity('GetRunId').output.firstRow.RunId",
									"type": "Expression"
								},
								"FilterStartDate": {
									"value": "@activity('GetDateFilterValuesForLeads').output.firstRow.StartDateFilter",
									"type": "Expression"
								},
								"FilterEndDate": {
									"value": "@activity('GetDateFilterValuesForLeads').output.firstRow.EndDateFilter",
									"type": "Expression"
								},
								"ProgramId": {
									"value": "@activity('GetProgramFilterValues').output.firstRow.ProgramId",
									"type": "Expression"
								},
								"FilterParameter": "createdAt",
								"ActivityFilterStartDate": {
									"value": "@activity('GetDateFilterValuesForActivities').output.firstRow.StartDateFilter",
									"type": "Expression"
								},
								"ActivityFilterEndDate": {
									"value": "@activity('GetDateFilterValuesForActivities').output.firstRow.EndDateFilter",
									"type": "Expression"
								},
								"ProgramName": {
									"value": "@activity('GetProgramFilterValues').output.firstRow.ProgramName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetDateFilterValuesForActivities",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetDateFilterValuesForLeads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "IF EXISTS (SELECT * FROM Mtd.MarketoFilterConfig WHERE ISNULL(ActivityImportStatus,0)=0)\n  BEGIN\n  SELECT MFC_ID,StartDateFilter,EndDateFilter,'History' as FilterType\n  FROM Mtd.MarketoFilterConfig\n  WHERE MFC_Id IN (\n  SELECT min(mfc_id)\n    FROM Mtd.MarketoFilterConfig\n   WHERE Isnull(ActivityImportStatus,0)=0)\n   END\n   ELSE \n   BEGIN\n   select -1 as MFC_ID\n         ,convert(varchar,cast(getdate()-1 as date))+'T00:00:00Z' as StartDateFilter\n\t\t ,convert(varchar,cast(getdate() as date))+'T00:00:00Z' as EndDateFilter\n\t\t ,'Latest' as FilterType\n   END",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					},
					{
						"name": "GetDateFilterValuesForPrograms",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LogStartOfCampaignImport",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "IF EXISTS (SELECT * FROM Mtd.MarketoFilterConfigForPrograms WHERE ISNULL(ImportStatus,0)=0)\n  BEGIN\n  SELECT MFCP_ID,StartDateFilter,EndDateFilter,'History' as FilterType\n  FROM Mtd.MarketoFilterConfigForPrograms\n  WHERE MFCP_Id IN (\n  SELECT min(mfcp_id)\n    FROM Mtd.MarketoFilterConfigForPrograms\n   WHERE Isnull(ImportStatus,0)=0)\n   END\n   ELSE \n   BEGIN\n   select -1 as MFCP_ID\n         ,convert(varchar,cast(getdate()-1 as date))+'T00:00:00Z' as StartDateFilter\n\t\t ,convert(varchar,cast(getdate() as date))+'T00:00:00Z' as EndDateFilter\n\t\t ,'Latest' as FilterType\n   END",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestDataMart",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Users",
									"SchemaName": "Stg"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ImportCampaignDataToDataMart_1')]",
				"[concat(variables('factoryId'), '/pipelines/ImportCampaignDataToDataMart_2')]"
			]
		}
	]
}